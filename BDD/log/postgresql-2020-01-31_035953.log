2020-01-31 03:59:54.275 CET [8608] LOG:  le système de bases de données a été arrêté à 2020-01-31 03:58:06 CET
2020-01-31 03:59:55.290 CET [7124] LOG:  le système de bases de données est prêt pour accepter les connexions
2020-01-31 15:54:51.308 CET [16064] ERREUR:  la colonne ad.adsrc n'existe pas au caractÃ¨re 65
2020-01-31 15:54:51.308 CET [16064] INSTRUCTION :  SELECT DISTINCT dep.deptype, dep.classid, cl.relkind, ad.adbin, ad.adsrc,
	    CASE WHEN cl.relkind IS NOT NULL THEN cl.relkind || COALESCE(dep.objsubid::text, '')
	        WHEN tg.oid IS NOT NULL THEN 'T'::text
	        WHEN ty.oid IS NOT NULL THEN 'y'::text
	        WHEN ns.oid IS NOT NULL THEN 'n'::text
	        WHEN pr.oid IS NOT NULL THEN 'p'::text
	        WHEN la.oid IS NOT NULL THEN 'l'::text
	        WHEN rw.oid IS NOT NULL THEN 'R'::text
	        WHEN co.oid IS NOT NULL THEN 'C'::text || contype
	        WHEN ad.oid IS NOT NULL THEN 'A'::text
	        WHEN fs.oid IS NOT NULL THEN 'F'::text
	        WHEN fdw.oid IS NOT NULL THEN 'f'::text
	        ELSE ''
	    END AS type,
	    COALESCE(coc.relname, clrw.relname) AS ownertable,
	    CASE WHEN cl.relname IS NOT NULL AND att.attname IS NOT NULL THEN cl.relname || '.' || att.attname
	    ELSE COALESCE(cl.relname, co.conname, pr.proname, tg.tgname, ty.typname, la.lanname, rw.rulename, ns.nspname, fs.srvname, fdw.fdwname)
	    END AS refname,
	    COALESCE(nsc.nspname, nso.nspname, nsp.nspname, nst.nspname, nsrw.nspname) AS nspname
	FROM pg_depend dep
	LEFT JOIN pg_class cl ON dep.objid=cl.oid
	LEFT JOIN pg_attribute att ON dep.objid=att.attrelid AND dep.objsubid=att.attnum
	LEFT JOIN pg_namespace nsc ON cl.relnamespace=nsc.oid
	LEFT JOIN pg_proc pr ON dep.objid=pr.oid
	LEFT JOIN pg_namespace nsp ON pr.pronamespace=nsp.oid
	LEFT JOIN pg_trigger tg ON dep.objid=tg.oid
	LEFT JOIN pg_type ty ON dep.objid=ty.oid
	LEFT JOIN pg_namespace nst ON ty.typnamespace=nst.oid
	LEFT JOIN pg_constraint co ON dep.objid=co.oid
	LEFT JOIN pg_class coc ON co.conrelid=coc.oid
	LEFT JOIN pg_namespace nso ON co.connamespace=nso.oid
	LEFT JOIN pg_rewrite rw ON dep.objid=rw.oid
	LEFT JOIN pg_class clrw ON clrw.oid=rw.ev_class
	LEFT JOIN pg_namespace nsrw ON clrw.relnamespace=nsrw.oid
	LEFT JOIN pg_language la ON dep.objid=la.oid
	LEFT JOIN pg_namespace ns ON dep.objid=ns.oid
	LEFT JOIN pg_attrdef ad ON ad.oid=dep.objid
	LEFT JOIN pg_foreign_server fs ON fs.oid=dep.objid
	LEFT JOIN pg_foreign_data_wrapper fdw ON fdw.oid=dep.objid
	WHERE dep.refobjid=16393::oid AND
	classid IN ( SELECT oid FROM pg_class WHERE relname IN
	   ('pg_class', 'pg_constraint', 'pg_conversion', 'pg_language', 'pg_proc', 'pg_rewrite', 'pg_namespace',
	   'pg_trigger', 'pg_type', 'pg_attrdef', 'pg_event_trigger', 'pg_foreign_server', 'pg_foreign_data_wrapper'))
	ORDER BY classid, cl.relkind
2020-01-31 15:54:51.312 CET [16064] ERREUR:  la colonne ad.adsrc n'existe pas au caractÃ¨re 68
2020-01-31 15:54:51.312 CET [16064] INSTRUCTION :  SELECT DISTINCT dep.deptype, dep.refclassid, cl.relkind, ad.adbin, ad.adsrc,
	    CASE WHEN cl.relkind IS NOT NULL THEN cl.relkind || COALESCE(dep.refobjsubid::character varying, '')
	        WHEN tg.oid IS NOT NULL THEN 'T'::text
	        WHEN ty.oid IS NOT NULL AND ty.typbasetype = 0 THEN 'y'::text
	        WHEN ty.oid IS NOT NULL AND ty.typbasetype != 0 THEN 'd'::text
	        WHEN ns.oid IS NOT NULL THEN 'n'::text
	        WHEN pr.oid IS NOT NULL THEN 'p'::text
	        WHEN la.oid IS NOT NULL THEN 'l'::text
	        WHEN rw.oid IS NOT NULL THEN 'R'::text
	        WHEN co.oid IS NOT NULL THEN 'C'::text || contype
	        WHEN ad.oid IS NOT NULL THEN 'A'::text
	        WHEN fs.oid IS NOT NULL THEN 'F'::text
	        WHEN fdw.oid IS NOT NULL THEN 'f'::text
	    ELSE ''
	    END AS type,
	    COALESCE(coc.relname, clrw.relname) AS ownertable,
	    CASE WHEN cl.relname IS NOT NULL OR att.attname IS NOT NULL THEN cl.relname || '.' || att.attname
	    ELSE COALESCE(cl.relname, co.conname, pr.proname, tg.tgname, ty.typname, la.lanname, rw.rulename, ns.nspname, fs.srvname, fdw.fdwname)
	    END AS refname,
	    COALESCE(nsc.nspname, nso.nspname, nsp.nspname, nst.nspname, nsrw.nspname) AS nspname
	FROM pg_depend dep
	LEFT JOIN pg_class cl ON dep.refobjid=cl.oid
	LEFT JOIN pg_attribute att ON dep.refobjid=att.attrelid AND dep.refobjsubid=att.attnum
	LEFT JOIN pg_namespace nsc ON cl.relnamespace=nsc.oid
	LEFT JOIN pg_proc pr ON dep.refobjid=pr.oid
	LEFT JOIN pg_namespace nsp ON pr.pronamespace=nsp.oid
	LEFT JOIN pg_trigger tg ON dep.refobjid=tg.oid
	LEFT JOIN pg_type ty ON dep.refobjid=ty.oid
	LEFT JOIN pg_namespace nst ON ty.typnamespace=nst.oid
	LEFT JOIN pg_constraint co ON dep.refobjid=co.oid
	LEFT JOIN pg_class coc ON co.conrelid=coc.oid
	LEFT JOIN pg_namespace nso ON co.connamespace=nso.oid
	LEFT JOIN pg_rewrite rw ON dep.refobjid=rw.oid
	LEFT JOIN pg_class clrw ON clrw.oid=rw.ev_class
	LEFT JOIN pg_namespace nsrw ON clrw.relnamespace=nsrw.oid
	LEFT JOIN pg_language la ON dep.refobjid=la.oid
	LEFT JOIN pg_namespace ns ON dep.refobjid=ns.oid
	LEFT JOIN pg_attrdef ad ON ad.adrelid=att.attrelid AND ad.adnum=att.attnum
	LEFT JOIN pg_foreign_server fs ON fs.oid=dep.refobjid
	LEFT JOIN pg_foreign_data_wrapper fdw ON fdw.oid=dep.refobjid
	WHERE dep.objid=16393::oid AND
	refclassid IN ( SELECT oid FROM pg_class WHERE relname IN
	   ('pg_class', 'pg_constraint', 'pg_conversion', 'pg_language', 'pg_proc', 'pg_rewrite', 'pg_namespace',
	   'pg_trigger', 'pg_type', 'pg_attrdef', 'pg_event_trigger', 'pg_foreign_server', 'pg_foreign_data_wrapper'))
	ORDER BY refclassid, cl.relkind
2020-01-31 15:55:44.432 CET [17984] ERREUR:  erreur de syntaxe sur ou prÃ¨s de Â« AUTO_INCREMENT Â» au caractÃ¨re 80
2020-01-31 15:55:44.432 CET [17984] INSTRUCTION :  CREATE DATABASE Pur_beurre;
	
	CREATE TABLE Store (
	                Store_ID INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Store_ID)
	);
	
	
	CREATE TABLE Category (
	                Category_ID INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Category_ID)
	);
	
	
	CREATE TABLE Product (
	                _ID INT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                Url_link VARCHAR(500) NOT NULL,
	                Ingredients VARCHAR(2000) NOT NULL,
	                Nutriscore VARCHAR(10) NOT NULL,
	                PRIMARY KEY (_ID)
	);
	
	
	CREATE TABLE Relation_products_and_stoes (
	                Store_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Store_ID, _ID)
	);
	
	
	CREATE TABLE Relation_products_and_categories (
	                Category_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Category_ID, _ID)
	);
	
	
	CREATE TABLE User_1 (
	                user_id INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(50) NOT NULL,
	                PRIMARY KEY (user_id)
	);
	
	
	CREATE TABLE History (
	                id INT AUTO_INCREMENT NOT NULL,
	                user_id INT NOT NULL,
	                chosen_product INT NOT NULL,
	                remplacement_product INT NOT NULL,
	                PRIMARY KEY (id)
	);
	
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT store_relation_products_and_stoes_fk
	FOREIGN KEY (Store_ID)
	REFERENCES Store (Store_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT category_relation_products_and_categories_fk
	FOREIGN KEY (Category_ID)
	REFERENCES Category (Category_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk
	FOREIGN KEY (chosen_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT product_relation_products_and_categories_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT product_relation_products_and_stoes_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk1
	FOREIGN KEY (remplacement_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT user_history_fk
	FOREIGN KEY (user_id)
	REFERENCES User_1 (user_id)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
2020-01-31 15:57:51.896 CET [17984] ERREUR:  erreur de syntaxe sur ou prÃ¨s de Â« AUTO_INCREMENT Â» au caractÃ¨re 80
2020-01-31 15:57:51.896 CET [17984] INSTRUCTION :  CREATE DATABASE Pur_beurre;
	
	CREATE TABLE Store (
	                Store_ID INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Store_ID)
	);
	
	
	CREATE TABLE Category (
	                Category_ID INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Category_ID)
	);
	
	
	CREATE TABLE Product (
	                _ID INT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                Url_link VARCHAR(500) NOT NULL,
	                Ingredients VARCHAR(2000) NOT NULL,
	                Nutriscore VARCHAR(10) NOT NULL,
	                PRIMARY KEY (_ID)
	);
	
	
	CREATE TABLE Relation_products_and_stoes (
	                Store_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Store_ID, _ID)
	);
	
	
	CREATE TABLE Relation_products_and_categories (
	                Category_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Category_ID, _ID)
	);
	
	
	CREATE TABLE User_1 (
	                user_id INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(50) NOT NULL,
	                PRIMARY KEY (user_id)
	);
	
	
	CREATE TABLE History (
	                id INT AUTO_INCREMENT NOT NULL,
	                user_id INT NOT NULL,
	                chosen_product INT NOT NULL,
	                remplacement_product INT NOT NULL,
	                PRIMARY KEY (id)
	);
	
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT store_relation_products_and_stoes_fk
	FOREIGN KEY (Store_ID)
	REFERENCES Store (Store_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT category_relation_products_and_categories_fk
	FOREIGN KEY (Category_ID)
	REFERENCES Category (Category_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk
	FOREIGN KEY (chosen_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT product_relation_products_and_categories_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT product_relation_products_and_stoes_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk1
	FOREIGN KEY (remplacement_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT user_history_fk
	FOREIGN KEY (user_id)
	REFERENCES User_1 (user_id)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
2020-01-31 15:58:35.306 CET [17984] ERREUR:  erreur de syntaxe sur ou prÃ¨s de Â« Auto_increment Â» au caractÃ¨re 80
2020-01-31 15:58:35.306 CET [17984] INSTRUCTION :  CREATE DATABASE Pur_beurre;
	
	CREATE TABLE Store (
	                Store_ID INT Auto_increment NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Store_ID)
	);
	
	
	CREATE TABLE Category (
	                Category_ID INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                PRIMARY KEY (Category_ID)
	);
	
	
	CREATE TABLE Product (
	                _ID INT NOT NULL,
	                Name VARCHAR(30) NOT NULL,
	                Url_link VARCHAR(500) NOT NULL,
	                Ingredients VARCHAR(2000) NOT NULL,
	                Nutriscore VARCHAR(10) NOT NULL,
	                PRIMARY KEY (_ID)
	);
	
	
	CREATE TABLE Relation_products_and_stoes (
	                Store_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Store_ID, _ID)
	);
	
	
	CREATE TABLE Relation_products_and_categories (
	                Category_ID INT NOT NULL,
	                _ID INT NOT NULL,
	                PRIMARY KEY (Category_ID, _ID)
	);
	
	
	CREATE TABLE User_1 (
	                user_id INT AUTO_INCREMENT NOT NULL,
	                Name VARCHAR(50) NOT NULL,
	                PRIMARY KEY (user_id)
	);
	
	
	CREATE TABLE History (
	                id INT AUTO_INCREMENT NOT NULL,
	                user_id INT NOT NULL,
	                chosen_product INT NOT NULL,
	                remplacement_product INT NOT NULL,
	                PRIMARY KEY (id)
	);
	
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT store_relation_products_and_stoes_fk
	FOREIGN KEY (Store_ID)
	REFERENCES Store (Store_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT category_relation_products_and_categories_fk
	FOREIGN KEY (Category_ID)
	REFERENCES Category (Category_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk
	FOREIGN KEY (chosen_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_categories ADD CONSTRAINT product_relation_products_and_categories_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE Relation_products_and_stoes ADD CONSTRAINT product_relation_products_and_stoes_fk
	FOREIGN KEY (_ID)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT product_history_fk1
	FOREIGN KEY (remplacement_product)
	REFERENCES Product (_ID)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
	ALTER TABLE History ADD CONSTRAINT user_history_fk
	FOREIGN KEY (user_id)
	REFERENCES User_1 (user_id)
	ON DELETE NO ACTION
	ON UPDATE NO ACTION;
	
2020-01-31 16:13:28.890 CET [16064] LOG:  n'a pas pu recevoir les donnÃ©es du client : unrecognized winsock error 10054
2020-01-31 16:13:28.890 CET [12000] LOG:  n'a pas pu recevoir les donnÃ©es du client : unrecognized winsock error 10054
2020-01-31 16:13:28.889 CET [17984] LOG:  n'a pas pu recevoir les donnÃ©es du client : unrecognized winsock error 10054
2020-01-31 16:14:02.105 CET [7124] LOG:  a reçu une demande d'arrêt rapide
2020-01-31 16:14:02.578 CET [7124] LOG:  annulation des transactions actives
2020-01-31 16:14:02.685 CET [8712] ERREUR:  annulation de la requête à la demande de l'utilisateur
2020-01-31 16:14:02.713 CET [7124] LOG:  processus en tâche de fond « logical replication launcher » (PID 8712) quitte avec le code de sortie 1
2020-01-31 16:14:02.742 CET [8648] LOG:  arrêt en cours
2020-01-31 16:14:03.143 CET [7124] LOG:  le système de base de données est arrêté
